{"version":3,"sources":["serviceWorker.js","Components/productView.js","Components/modal.js","Components/Table.js","index.js"],"names":["Boolean","window","location","hostname","match","productView","props","Figure","Image","width","height","alt","src","productImgSrc","Caption","productName","productDesc","handleSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Example","context","handleShow","bind","handleClose","state","show","fullName","cardNumber","expMonth","expYear","userCVV","this","setState","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Tab","Container","id","defaultActiveKey","Nav","fill","className","Item","Link","eventKey","Content","Pane","Form","noValidate","validated","onSubmit","Row","Label","Control","required","type","placeholder","Feedback","Group","as","Col","md","controlId","Check","label","feedback","class","React","Component","cartTableClass","handleDeleteRow","i","e","rows","productList","splice","handleTotalPrice","console","log","handleChange","target","value","getAttribute","quanitity","total","length","price","discount","totalPrice","toFixed","fakeData","tabs","Table","responsive","map","product","key","name","description","image","select-index","onChange","isNaN","scope","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b5cfcb8f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport Figure from \"react-bootstrap/Figure\";\r\n\r\nexport default function productView(props) {\r\n  return (\r\n    <Figure>\r\n      <Figure.Image\r\n        width={171}\r\n        height={180}\r\n        alt=\"171x180\"\r\n        src={props.productImgSrc}\r\n      />\r\n      <Figure.Caption>\r\n        <h4>{props.productName}</h4>\r\n        <p>{props.productDesc}</p>\r\n      </Figure.Caption>\r\n    </Figure>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/button'\r\nimport Modal from 'react-bootstrap/modal'\r\n\r\nimport Row from 'react-bootstrap/row'\r\nimport Nav from 'react-bootstrap/nav'\r\nimport Col from 'react-bootstrap/col'\r\nimport Tab from 'react-bootstrap/tab'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nlet validated, setValidated = false;\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    setValidated(true);\r\n  };\r\n\r\n\r\nexport default class Example extends React.Component {\r\n\tconstructor(props, context) {\r\n\t\tsuper(props, context);\r\n\r\n\t\tthis.handleShow = this.handleShow.bind(this);\r\n\t\tthis.handleClose = this.handleClose.bind(this);\r\n\r\n\t\tthis.state = {\r\n      show: false,\r\n      fullName:'',\r\n      cardNumber:'',\r\n      expMonth:0,\r\n      expYear:0,\r\n      userCVV:0\r\n\t\t};\r\n  }\r\n  \r\n\r\n\thandleClose() {\r\n\t\tthis.setState({ show: false });\r\n\t}\r\n\r\n\thandleShow() {\r\n\t\tthis.setState({ show: true });\r\n  }\r\n  \r\n  handleInputChange(event) {\r\n    \r\n  }\r\n\r\n  handleSubmit(event) {\r\n  }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button variant=\"primary\" onClick={this.handleShow}>\r\n\t\t\t\t\tCheckout\r\n        </Button>\r\n\r\n\t\t\t\t<Modal show={this.state.show} onHide={this.handleClose}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>\r\n              <h5>Come on! Let's check out</h5>\r\n            </Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n          <div >\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                <Nav variant=\"pills\" fill className=\"justify-content-center\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"first\">Credit Card</Nav.Link>\r\n                    </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"second\">PayPal</Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n                <Nav variant=\"pills\" fill className=\"justify-content-center\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"thrid\">Bank Transfer</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                  <Tab.Content>\r\n                    <Tab.Pane eventKey=\"first\">\r\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                        <Form.Row>\r\n                          <Form.Label>Full name</Form.Label>\r\n                          <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Please Enter Full Name\"\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Please enter your full name.\r\n                          </Form.Control.Feedback>\r\n                          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                        </Form.Row>  \r\n                        <Form.Row>\r\n                          <Form.Label>Credit card number</Form.Label>\r\n                          <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Please Enter Credit card number\"\r\n                          />\r\n                        </Form.Row>  \r\n                        <Form.Row>\r\n                          <Form.Label>Credit card number</Form.Label>\r\n                          <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Please Enter Credit card number\"\r\n                          />\r\n                        </Form.Row>  \r\n                        <Form.Group>\r\n                        <Form.Row>\r\n                          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n                            <Form.Label>Exp Month</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"MM\" required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                              Please provide a valid city.\r\n                            </Form.Control.Feedback>\r\n                          </Form.Group>\r\n                          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n                            <Form.Label>Exp Year</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"DD\" required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                              Please provide a valid state.\r\n                            </Form.Control.Feedback>\r\n                          </Form.Group>\r\n                          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                            <Form.Label>CVV</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"000\" required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                              Please provide a valid CVV.\r\n                            </Form.Control.Feedback>\r\n                          </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Check\r\n                          required\r\n                          label=\"Agree to terms and conditions\"\r\n                          feedback=\"You must agree before submitting.\"\r\n                        />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Submit form</Button>\r\n                    </Form>\r\n                    </Tab.Pane>\r\n                    <Tab.Pane eventKey=\"second\">\r\n                    <div>\r\n                        <p>PayPal is the easliest way to pay online</p>\r\n                        <p><button> <span><i class=\"fab fa-paypal mr-1\"></i>Login my PayPal</span></button></p>\r\n                        <p><b>Note:</b>Here are some notes.</p>\r\n                    </div>\r\n                    </Tab.Pane>\r\n                    <Tab.Pane eventKey=\"thrid\">\r\n                    <div>\r\n                        <p>Bank account details</p>\r\n                        <p><b>Bank:</b></p>\r\n                        <p>The World Bank</p>\r\n                        <p><b>Account Number:</b></p>\r\n                        <p>123123123</p>\r\n                        <p><b>IBAN:</b></p>\r\n                        <p>132132132</p>\r\n                        <p><b>Note:</b></p>\r\n                        <p>Here are some notes.</p>\r\n                    </div>\r\n                    </Tab.Pane>\r\n                  </Tab.Content>\r\n            </Tab.Container>\r\n          </div>\r\n          </Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component,useState } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport ProductView from './productView';\r\nimport ModalBtn from \"./modal\";\r\nimport fakeData from '../fakeData';\r\n\r\nlet newProductList = fakeData;\r\n\r\nclass cartTableClass extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      productList:fakeData,\r\n      totalPrice:0,\r\n    }\r\n    this.handleDeleteRow = this.handleDeleteRow.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.tabs = [];\r\n  }\r\n\r\n  handleDeleteRow = (i,e) => {\r\n    let rows = [...this.state.productList]\r\n    rows.splice(i, 1)\r\n    this.setState({ \r\n      productList: rows\r\n    },() => {\r\n        this.handleTotalPrice();\r\n    });\r\n\r\n    console.log(\"1st: \" + this.state.productList);\r\n  };\r\n\r\n  handleChange =(event) => {\r\n    //this.setState({value: event.target.value});\r\n    let rows = [...this.state.productList];\r\n    console.log(\"You choosse: \" + event.target.value);\r\n    let i =  event.target.getAttribute(\"select-index\");\r\n    rows[i].quanitity = event.target.value;\r\n    this.setState({ \r\n      productList: rows\r\n    },() => {\r\n        this.handleTotalPrice();\r\n    });\r\n  }\r\n\r\n\r\n  handleTotalPrice=()=>{\r\n    var total = 0;\r\n    for(var i=0;i<this.state.productList.length;i++){\r\n      total = total + this.state.productList[i].price * this.state.productList[i].quanitity*(1-this.state.productList[i].discount);\r\n    }\r\n    this.setState({totalPrice:(total.toFixed(2))});\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.handleTotalPrice();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table responsive=\"sm\">\r\n        <thead>\r\n        <tr>\r\n            <th>Product</th>\r\n            <th>Discount</th>\r\n            <th>Quantity</th>\r\n            <th>Price</th>\r\n            <th>Action</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {this.state.productList.map((product,i) => (\r\n            <tr key={i}>\r\n            <td>\r\n            <ProductView\r\n                    productName={product.name}\r\n                    productDesc={product.description}\r\n                    productImgSrc={product.image}\r\n                  />\r\n            </td>\r\n            <td>\r\n                {(product.discount===0) ? \"N/A\" : product.discount*100 + \"%\"}\r\n            </td>\r\n            <td>\r\n            <Form value={this.value}>\r\n              <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                <select select-index={i} onChange={this.handleChange}>\r\n                  <option value={1}>1</option>\r\n                  <option value={2}>2</option>\r\n                  <option value={3}>3</option>\r\n                </select>\r\n              </Form.Group>\r\n            </Form>\r\n            </td>\r\n            <td>{(isNaN(product.price)) ? \"N/A\" : \"$\" + (product.price*product.quanitity).toFixed(2)}</td>\r\n            <td>\r\n                <button onClick={e => this.handleDeleteRow(i,e)}>delete</button>\r\n                <button>refresh</button>\r\n            </td>\r\n        </tr>\r\n        ))}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n              <th class=\"hide-xs\" scope=\"row\"></th>\r\n              <td class=\"hide-xs\"></td>\r\n              <td class=\"hide-xs\"></td>\r\n              <td>total: $<span class=\"total\">{this.state.totalPrice}</span></td>\r\n              <td class=\"hide-xs\"></td>\r\n          </tr>\r\n          <tr>\r\n            <th><button class=\"btn btn-warning\" type=\"button\"><span class=\"badge\"><i class=\"mr-2 pg-arrow_left_line_alt\"></i></span>Continue Shopping</button></th>\r\n            <td class=\"hide-xs\" scope=\"row\"></td>\r\n            <td class=\"hide-xs\"></td>\r\n            <td class=\"hide-xs\"></td>\r\n            <td><ModalBtn /></td>\r\n          </tr>\r\n        </tfoot>\r\n    </Table>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default cartTableClass;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Table from './Components/Table';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Table />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}